WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.699 align:start position:0%
 
hey<00:00:00.269><c> my</c><00:00:00.420><c> name</c><00:00:00.539><c> is</c><00:00:00.630><c> Mike</c><00:00:00.810><c> I'm</c><00:00:00.989><c> a</c><00:00:01.110><c> developer</c><00:00:01.500><c> from</c>

00:00:01.699 --> 00:00:01.709 align:start position:0%
hey my name is Mike I'm a developer from
 

00:00:01.709 --> 00:00:03.470 align:start position:0%
hey my name is Mike I'm a developer from
Philadelphia<00:00:02.370><c> and</c><00:00:02.550><c> in</c><00:00:02.760><c> this</c><00:00:02.850><c> video</c><00:00:03.149><c> I'm</c><00:00:03.389><c> going</c>

00:00:03.470 --> 00:00:03.480 align:start position:0%
Philadelphia and in this video I'm going
 

00:00:03.480 --> 00:00:04.660 align:start position:0%
Philadelphia and in this video I'm going
to<00:00:03.540><c> give</c><00:00:03.629><c> you</c><00:00:03.750><c> an</c><00:00:03.840><c> introduction</c><00:00:04.230><c> into</c>

00:00:04.660 --> 00:00:04.670 align:start position:0%
to give you an introduction into
 

00:00:04.670 --> 00:00:06.889 align:start position:0%
to give you an introduction into
object-oriented<00:00:05.670><c> programming</c><00:00:06.150><c> by</c><00:00:06.600><c> answering</c>

00:00:06.889 --> 00:00:06.899 align:start position:0%
object-oriented programming by answering
 

00:00:06.899 --> 00:00:09.110 align:start position:0%
object-oriented programming by answering
the<00:00:07.140><c> question</c><00:00:07.500><c> what</c><00:00:07.950><c> are</c><00:00:07.980><c> classes</c><00:00:08.880><c> and</c>

00:00:09.110 --> 00:00:09.120 align:start position:0%
the question what are classes and
 

00:00:09.120 --> 00:00:11.419 align:start position:0%
the question what are classes and
objects<00:00:09.660><c> so</c><00:00:10.230><c> without</c><00:00:10.380><c> further</c><00:00:10.530><c> ado</c><00:00:10.860><c> let's</c><00:00:11.160><c> get</c>

00:00:11.419 --> 00:00:11.429 align:start position:0%
objects so without further ado let's get
 

00:00:11.429 --> 00:00:13.100 align:start position:0%
objects so without further ado let's get
into<00:00:11.490><c> it</c><00:00:11.880><c> and</c><00:00:12.090><c> we'll</c><00:00:12.300><c> learn</c><00:00:12.450><c> about</c><00:00:12.509><c> these</c><00:00:12.870><c> two</c>

00:00:13.100 --> 00:00:13.110 align:start position:0%
into it and we'll learn about these two
 

00:00:13.110 --> 00:00:15.499 align:start position:0%
into it and we'll learn about these two
really<00:00:13.530><c> important</c><00:00:13.980><c> concepts</c><00:00:14.490><c> one</c><00:00:15.360><c> of</c><00:00:15.450><c> the</c>

00:00:15.499 --> 00:00:15.509 align:start position:0%
really important concepts one of the
 

00:00:15.509 --> 00:00:16.939 align:start position:0%
really important concepts one of the
best<00:00:15.690><c> things</c><00:00:15.870><c> about</c><00:00:15.960><c> writing</c><00:00:16.260><c> programs</c><00:00:16.770><c> is</c>

00:00:16.939 --> 00:00:16.949 align:start position:0%
best things about writing programs is
 

00:00:16.949 --> 00:00:18.710 align:start position:0%
best things about writing programs is
being<00:00:17.160><c> able</c><00:00:17.250><c> to</c><00:00:17.430><c> easily</c><00:00:17.880><c> work</c><00:00:18.119><c> with</c><00:00:18.180><c> and</c><00:00:18.570><c> keep</c>

00:00:18.710 --> 00:00:18.720 align:start position:0%
being able to easily work with and keep
 

00:00:18.720 --> 00:00:20.870 align:start position:0%
being able to easily work with and keep
track<00:00:19.020><c> of</c><00:00:19.080><c> different</c><00:00:19.350><c> types</c><00:00:19.890><c> of</c><00:00:20.039><c> data</c><00:00:20.220><c> in</c><00:00:20.430><c> fact</c>

00:00:20.870 --> 00:00:20.880 align:start position:0%
track of different types of data in fact
 

00:00:20.880 --> 00:00:22.550 align:start position:0%
track of different types of data in fact
data<00:00:21.180><c> is</c><00:00:21.300><c> the</c><00:00:21.390><c> driving</c><00:00:21.810><c> force</c><00:00:22.050><c> behind</c><00:00:22.109><c> most</c>

00:00:22.550 --> 00:00:22.560 align:start position:0%
data is the driving force behind most
 

00:00:22.560 --> 00:00:24.380 align:start position:0%
data is the driving force behind most
programs<00:00:23.130><c> that</c><00:00:23.400><c> you'll</c><00:00:23.519><c> write</c><00:00:23.760><c> the</c>

00:00:24.380 --> 00:00:24.390 align:start position:0%
programs that you'll write the
 

00:00:24.390 --> 00:00:25.700 align:start position:0%
programs that you'll write the
programmers<00:00:24.779><c> are</c><00:00:24.840><c> constantly</c><00:00:25.260><c> parsing</c>

00:00:25.700 --> 00:00:25.710 align:start position:0%
programmers are constantly parsing
 

00:00:25.710 --> 00:00:27.140 align:start position:0%
programmers are constantly parsing
strings<00:00:26.039><c> adding</c><00:00:26.460><c> and</c><00:00:26.580><c> subtracting</c><00:00:26.910><c> numbers</c>

00:00:27.140 --> 00:00:27.150 align:start position:0%
strings adding and subtracting numbers
 

00:00:27.150 --> 00:00:29.029 align:start position:0%
strings adding and subtracting numbers
counting<00:00:27.840><c> things</c><00:00:28.080><c> in</c><00:00:28.289><c> passing</c><00:00:28.740><c> different</c>

00:00:29.029 --> 00:00:29.039 align:start position:0%
counting things in passing different
 

00:00:29.039 --> 00:00:31.130 align:start position:0%
counting things in passing different
pieces<00:00:29.189><c> of</c><00:00:29.340><c> data</c><00:00:29.640><c> around</c><00:00:29.820><c> and</c><00:00:30.300><c> all</c><00:00:30.929><c> major</c>

00:00:31.130 --> 00:00:31.140 align:start position:0%
pieces of data around and all major
 

00:00:31.140 --> 00:00:32.840 align:start position:0%
pieces of data around and all major
applications<00:00:31.800><c> being</c><00:00:32.040><c> able</c><00:00:32.189><c> to</c><00:00:32.340><c> work</c><00:00:32.579><c> with</c>

00:00:32.840 --> 00:00:32.850 align:start position:0%
applications being able to work with
 

00:00:32.850 --> 00:00:34.670 align:start position:0%
applications being able to work with
data<00:00:33.090><c> in</c><00:00:33.210><c> an</c><00:00:33.420><c> organized</c><00:00:33.930><c> and</c><00:00:34.170><c> structured</c><00:00:34.469><c> way</c>

00:00:34.670 --> 00:00:34.680 align:start position:0%
data in an organized and structured way
 

00:00:34.680 --> 00:00:37.310 align:start position:0%
data in an organized and structured way
is<00:00:35.120><c> extremely</c><00:00:36.120><c> important</c><00:00:36.600><c> now</c><00:00:37.020><c> by</c><00:00:37.260><c> default</c>

00:00:37.310 --> 00:00:37.320 align:start position:0%
is extremely important now by default
 

00:00:37.320 --> 00:00:39.229 align:start position:0%
is extremely important now by default
most<00:00:38.010><c> programming</c><00:00:38.460><c> languages</c><00:00:38.820><c> will</c><00:00:39.059><c> allow</c>

00:00:39.229 --> 00:00:39.239 align:start position:0%
most programming languages will allow
 

00:00:39.239 --> 00:00:40.910 align:start position:0%
most programming languages will allow
you<00:00:39.300><c> to</c><00:00:39.420><c> store</c><00:00:39.719><c> and</c><00:00:39.989><c> keep</c><00:00:40.020><c> track</c><00:00:40.410><c> of</c><00:00:40.620><c> three</c>

00:00:40.910 --> 00:00:40.920 align:start position:0%
you to store and keep track of three
 

00:00:40.920 --> 00:00:44.119 align:start position:0%
you to store and keep track of three
distinct<00:00:41.670><c> types</c><00:00:41.700><c> of</c><00:00:42.120><c> data</c><00:00:42.360><c> text</c><00:00:43.200><c> numbers</c><00:00:43.890><c> and</c>

00:00:44.119 --> 00:00:44.129 align:start position:0%
distinct types of data text numbers and
 

00:00:44.129 --> 00:00:46.340 align:start position:0%
distinct types of data text numbers and
boolean<00:00:44.730><c> values</c><00:00:45.149><c> with</c><00:00:45.750><c> these</c><00:00:45.870><c> three</c><00:00:46.140><c> data</c>

00:00:46.340 --> 00:00:46.350 align:start position:0%
boolean values with these three data
 

00:00:46.350 --> 00:00:47.990 align:start position:0%
boolean values with these three data
types<00:00:46.620><c> we</c><00:00:46.800><c> can</c><00:00:46.920><c> represent</c><00:00:47.100><c> all</c><00:00:47.460><c> different</c>

00:00:47.990 --> 00:00:48.000 align:start position:0%
types we can represent all different
 

00:00:48.000 --> 00:00:49.220 align:start position:0%
types we can represent all different
types<00:00:48.149><c> of</c><00:00:48.329><c> information</c><00:00:48.539><c> things</c><00:00:49.110><c> like</c>

00:00:49.220 --> 00:00:49.230 align:start position:0%
types of information things like
 

00:00:49.230 --> 00:00:51.500 align:start position:0%
types of information things like
people's<00:00:49.710><c> names</c><00:00:50.010><c> with</c><00:00:50.309><c> text</c><00:00:50.789><c> whether</c><00:00:51.300><c> or</c><00:00:51.449><c> not</c>

00:00:51.500 --> 00:00:51.510 align:start position:0%
people's names with text whether or not
 

00:00:51.510 --> 00:00:53.569 align:start position:0%
people's names with text whether or not
someone<00:00:51.840><c> is</c><00:00:51.960><c> an</c><00:00:52.079><c> organ</c><00:00:52.379><c> donor</c><00:00:52.590><c> with</c><00:00:52.920><c> a</c><00:00:52.949><c> boolean</c>

00:00:53.569 --> 00:00:53.579 align:start position:0%
someone is an organ donor with a boolean
 

00:00:53.579 --> 00:00:55.880 align:start position:0%
someone is an organ donor with a boolean
value<00:00:53.730><c> or</c><00:00:54.180><c> the</c><00:00:54.449><c> price</c><00:00:54.719><c> of</c><00:00:54.930><c> an</c><00:00:55.020><c> item</c><00:00:55.140><c> with</c><00:00:55.860><c> a</c>

00:00:55.880 --> 00:00:55.890 align:start position:0%
value or the price of an item with a
 

00:00:55.890 --> 00:00:57.920 align:start position:0%
value or the price of an item with a
number<00:00:56.280><c> and</c><00:00:57.000><c> being</c><00:00:57.180><c> able</c><00:00:57.270><c> to</c><00:00:57.360><c> keep</c><00:00:57.570><c> track</c><00:00:57.780><c> of</c>

00:00:57.920 --> 00:00:57.930 align:start position:0%
number and being able to keep track of
 

00:00:57.930 --> 00:00:59.360 align:start position:0%
number and being able to keep track of
simple<00:00:58.260><c> pieces</c><00:00:58.410><c> of</c><00:00:58.530><c> data</c><00:00:58.770><c> like</c><00:00:58.920><c> this</c><00:00:59.160><c> is</c>

00:00:59.360 --> 00:00:59.370 align:start position:0%
simple pieces of data like this is
 

00:00:59.370 --> 00:01:01.400 align:start position:0%
simple pieces of data like this is
really<00:00:59.879><c> great</c><00:01:00.090><c> but</c><00:01:00.750><c> what</c><00:01:00.930><c> happens</c><00:01:01.230><c> when</c><00:01:01.320><c> we</c>

00:01:01.400 --> 00:01:01.410 align:start position:0%
really great but what happens when we
 

00:01:01.410 --> 00:01:03.740 align:start position:0%
really great but what happens when we
need<00:01:01.559><c> to</c><00:01:01.620><c> work</c><00:01:01.770><c> with</c><00:01:01.949><c> more</c><00:01:02.129><c> complex</c><00:01:02.760><c> data</c><00:01:03.090><c> we</c>

00:01:03.740 --> 00:01:03.750 align:start position:0%
need to work with more complex data we
 

00:01:03.750 --> 00:01:05.690 align:start position:0%
need to work with more complex data we
can<00:01:03.899><c> represent</c><00:01:04.049><c> a</c><00:01:04.320><c> name</c><00:01:04.559><c> with</c><00:01:04.830><c> a</c><00:01:04.860><c> string</c><00:01:05.220><c> and</c><00:01:05.549><c> a</c>

00:01:05.690 --> 00:01:05.700 align:start position:0%
can represent a name with a string and a
 

00:01:05.700 --> 00:01:07.219 align:start position:0%
can represent a name with a string and a
price<00:01:05.939><c> with</c><00:01:06.119><c> a</c><00:01:06.150><c> number</c><00:01:06.540><c> but</c><00:01:06.750><c> what</c><00:01:06.869><c> if</c><00:01:06.960><c> we</c><00:01:07.049><c> want</c>

00:01:07.219 --> 00:01:07.229 align:start position:0%
price with a number but what if we want
 

00:01:07.229 --> 00:01:08.840 align:start position:0%
price with a number but what if we want
to<00:01:07.260><c> represent</c><00:01:07.409><c> something</c><00:01:07.979><c> more</c><00:01:08.159><c> complex</c><00:01:08.640><c> like</c>

00:01:08.840 --> 00:01:08.850 align:start position:0%
to represent something more complex like
 

00:01:08.850 --> 00:01:11.330 align:start position:0%
to represent something more complex like
an<00:01:09.210><c> entity</c><00:01:09.689><c> in</c><00:01:09.869><c> the</c><00:01:10.020><c> real</c><00:01:10.200><c> world</c><00:01:10.439><c> let's</c><00:01:11.159><c> take</c><00:01:11.310><c> a</c>

00:01:11.330 --> 00:01:11.340 align:start position:0%
an entity in the real world let's take a
 

00:01:11.340 --> 00:01:13.310 align:start position:0%
an entity in the real world let's take a
student<00:01:11.790><c> for</c><00:01:11.939><c> example</c><00:01:12.140><c> imagine</c><00:01:13.140><c> we</c><00:01:13.229><c> were</c>

00:01:13.310 --> 00:01:13.320 align:start position:0%
student for example imagine we were
 

00:01:13.320 --> 00:01:15.109 align:start position:0%
student for example imagine we were
writing<00:01:13.470><c> a</c><00:01:13.619><c> program</c><00:01:14.010><c> for</c><00:01:14.220><c> a</c><00:01:14.280><c> school</c><00:01:14.700><c> and</c><00:01:15.030><c> we</c>

00:01:15.109 --> 00:01:15.119 align:start position:0%
writing a program for a school and we
 

00:01:15.119 --> 00:01:17.060 align:start position:0%
writing a program for a school and we
wanted<00:01:15.390><c> to</c><00:01:15.450><c> keep</c><00:01:15.630><c> track</c><00:01:15.930><c> of</c><00:01:15.960><c> the</c><00:01:16.290><c> students</c><00:01:16.830><c> who</c>

00:01:17.060 --> 00:01:17.070 align:start position:0%
wanted to keep track of the students who
 

00:01:17.070 --> 00:01:19.550 align:start position:0%
wanted to keep track of the students who
are<00:01:17.100><c> currently</c><00:01:17.700><c> enrolled</c><00:01:18.049><c> so</c><00:01:19.049><c> now</c><00:01:19.170><c> instead</c><00:01:19.470><c> of</c>

00:01:19.550 --> 00:01:19.560 align:start position:0%
are currently enrolled so now instead of
 

00:01:19.560 --> 00:01:21.499 align:start position:0%
are currently enrolled so now instead of
keeping<00:01:19.799><c> track</c><00:01:19.979><c> of</c><00:01:20.220><c> names</c><00:01:20.549><c> with</c><00:01:20.880><c> strings</c><00:01:21.270><c> or</c>

00:01:21.499 --> 00:01:21.509 align:start position:0%
keeping track of names with strings or
 

00:01:21.509 --> 00:01:23.390 align:start position:0%
keeping track of names with strings or
prices<00:01:21.960><c> with</c><00:01:22.110><c> numbers</c><00:01:22.470><c> we</c><00:01:23.009><c> want</c><00:01:23.189><c> to</c><00:01:23.250><c> be</c><00:01:23.310><c> able</c>

00:01:23.390 --> 00:01:23.400 align:start position:0%
prices with numbers we want to be able
 

00:01:23.400 --> 00:01:25.280 align:start position:0%
prices with numbers we want to be able
to<00:01:23.520><c> keep</c><00:01:23.700><c> track</c><00:01:23.759><c> of</c><00:01:24.150><c> students</c><00:01:24.630><c> but</c><00:01:25.170><c> the</c>

00:01:25.280 --> 00:01:25.290 align:start position:0%
to keep track of students but the
 

00:01:25.290 --> 00:01:27.260 align:start position:0%
to keep track of students but the
problem<00:01:25.619><c> is</c><00:01:25.710><c> we</c><00:01:25.860><c> don't</c><00:01:25.890><c> have</c><00:01:26.189><c> a</c><00:01:26.640><c> datatype</c><00:01:27.060><c> for</c>

00:01:27.260 --> 00:01:27.270 align:start position:0%
problem is we don't have a datatype for
 

00:01:27.270 --> 00:01:29.359 align:start position:0%
problem is we don't have a datatype for
students<00:01:27.990><c> there's</c><00:01:28.409><c> no</c><00:01:28.530><c> student</c><00:01:28.950><c> data</c><00:01:29.130><c> type</c>

00:01:29.359 --> 00:01:29.369 align:start position:0%
students there's no student data type
 

00:01:29.369 --> 00:01:30.830 align:start position:0%
students there's no student data type
floating<00:01:29.729><c> around</c><00:01:29.970><c> that's</c><00:01:30.180><c> built</c><00:01:30.479><c> into</c><00:01:30.689><c> the</c>

00:01:30.830 --> 00:01:30.840 align:start position:0%
floating around that's built into the
 

00:01:30.840 --> 00:01:33.109 align:start position:0%
floating around that's built into the
language<00:01:30.869><c> like</c><00:01:31.439><c> strings</c><00:01:31.860><c> numbers</c><00:01:32.310><c> or</c><00:01:32.549><c> boolean</c>

00:01:33.109 --> 00:01:33.119 align:start position:0%
language like strings numbers or boolean
 

00:01:33.119 --> 00:01:35.210 align:start position:0%
language like strings numbers or boolean
x'<00:01:33.150><c> on</c><00:01:33.360><c> top</c><00:01:34.079><c> of</c><00:01:34.170><c> that</c><00:01:34.259><c> we</c><00:01:34.439><c> might</c><00:01:34.650><c> also</c><00:01:34.829><c> want</c><00:01:35.159><c> to</c>

00:01:35.210 --> 00:01:35.220 align:start position:0%
x' on top of that we might also want to
 

00:01:35.220 --> 00:01:37.130 align:start position:0%
x' on top of that we might also want to
define<00:01:35.369><c> some</c><00:01:35.759><c> functionality</c><00:01:36.689><c> around</c><00:01:36.840><c> the</c>

00:01:37.130 --> 00:01:37.140 align:start position:0%
define some functionality around the
 

00:01:37.140 --> 00:01:38.450 align:start position:0%
define some functionality around the
student<00:01:37.500><c> like</c><00:01:37.710><c> giving</c><00:01:38.250><c> school</c>

00:01:38.450 --> 00:01:38.460 align:start position:0%
student like giving school
 

00:01:38.460 --> 00:01:40.130 align:start position:0%
student like giving school
administrators<00:01:39.030><c> the</c><00:01:39.210><c> ability</c><00:01:39.299><c> to</c><00:01:39.810><c> mark</c><00:01:40.049><c> a</c>

00:01:40.130 --> 00:01:40.140 align:start position:0%
administrators the ability to mark a
 

00:01:40.140 --> 00:01:42.170 align:start position:0%
administrators the ability to mark a
student<00:01:40.470><c> as</c><00:01:40.590><c> absent</c><00:01:41.130><c> or</c><00:01:41.310><c> change</c><00:01:41.700><c> their</c><00:01:41.909><c> grades</c>

00:01:42.170 --> 00:01:42.180 align:start position:0%
student as absent or change their grades
 

00:01:42.180 --> 00:01:44.510 align:start position:0%
student as absent or change their grades
for<00:01:42.390><c> example</c><00:01:42.840><c> and</c><00:01:43.140><c> as</c><00:01:43.680><c> we</c><00:01:43.860><c> write</c><00:01:44.100><c> more</c><00:01:44.310><c> and</c>

00:01:44.510 --> 00:01:44.520 align:start position:0%
for example and as we write more and
 

00:01:44.520 --> 00:01:46.429 align:start position:0%
for example and as we write more and
more<00:01:44.640><c> complex</c><00:01:45.149><c> programs</c><00:01:45.450><c> like</c><00:01:45.960><c> the</c><00:01:46.140><c> one</c><00:01:46.290><c> for</c>

00:01:46.429 --> 00:01:46.439 align:start position:0%
more complex programs like the one for
 

00:01:46.439 --> 00:01:48.139 align:start position:0%
more complex programs like the one for
this<00:01:46.590><c> school</c><00:01:47.009><c> we'll</c><00:01:47.610><c> want</c><00:01:47.790><c> to</c><00:01:47.820><c> be</c><00:01:47.880><c> able</c><00:01:48.000><c> to</c>

00:01:48.139 --> 00:01:48.149 align:start position:0%
this school we'll want to be able to
 

00:01:48.149 --> 00:01:50.450 align:start position:0%
this school we'll want to be able to
keep<00:01:48.329><c> track</c><00:01:48.659><c> of</c><00:01:48.869><c> and</c><00:01:49.049><c> model</c><00:01:49.470><c> more</c><00:01:49.770><c> complex</c>

00:01:50.450 --> 00:01:50.460 align:start position:0%
keep track of and model more complex
 

00:01:50.460 --> 00:01:52.580 align:start position:0%
keep track of and model more complex
pieces<00:01:50.820><c> of</c><00:01:51.119><c> data</c><00:01:51.299><c> and</c><00:01:51.570><c> therefore</c><00:01:52.229><c> we</c><00:01:52.409><c> need</c>

00:01:52.580 --> 00:01:52.590 align:start position:0%
pieces of data and therefore we need
 

00:01:52.590 --> 00:01:55.460 align:start position:0%
pieces of data and therefore we need
more<00:01:52.770><c> complex</c><00:01:53.460><c> data</c><00:01:53.820><c> types</c><00:01:54.270><c> in</c><00:01:54.840><c> order</c><00:01:55.380><c> to</c>

00:01:55.460 --> 00:01:55.470 align:start position:0%
more complex data types in order to
 

00:01:55.470 --> 00:01:56.840 align:start position:0%
more complex data types in order to
solve<00:01:55.619><c> this</c><00:01:55.770><c> problem</c><00:01:56.130><c> we</c><00:01:56.280><c> can</c><00:01:56.310><c> use</c><00:01:56.670><c> an</c>

00:01:56.840 --> 00:01:56.850 align:start position:0%
solve this problem we can use an
 

00:01:56.850 --> 00:01:59.420 align:start position:0%
solve this problem we can use an
object-oriented<00:01:57.810><c> programming</c><00:01:58.530><c> language</c><00:01:59.219><c> an</c>

00:01:59.420 --> 00:01:59.430 align:start position:0%
object-oriented programming language an
 

00:01:59.430 --> 00:02:01.429 align:start position:0%
object-oriented programming language an
object-oriented<00:02:00.420><c> programming</c><00:02:00.840><c> language</c><00:02:01.229><c> is</c>

00:02:01.429 --> 00:02:01.439 align:start position:0%
object-oriented programming language is
 

00:02:01.439 --> 00:02:02.840 align:start position:0%
object-oriented programming language is
a<00:02:01.469><c> programming</c><00:02:02.130><c> language</c><00:02:02.159><c> which</c><00:02:02.610><c> allows</c>

00:02:02.840 --> 00:02:02.850 align:start position:0%
a programming language which allows
 

00:02:02.850 --> 00:02:05.209 align:start position:0%
a programming language which allows
developers<00:02:02.880><c> to</c><00:02:03.479><c> create</c><00:02:03.930><c> their</c><00:02:04.380><c> own</c><00:02:04.409><c> custom</c>

00:02:05.209 --> 00:02:05.219 align:start position:0%
developers to create their own custom
 

00:02:05.219 --> 00:02:07.520 align:start position:0%
developers to create their own custom
data<00:02:05.820><c> types</c><00:02:06.119><c> so</c><00:02:06.869><c> even</c><00:02:07.140><c> if</c><00:02:07.229><c> the</c><00:02:07.350><c> language</c>

00:02:07.520 --> 00:02:07.530 align:start position:0%
data types so even if the language
 

00:02:07.530 --> 00:02:09.559 align:start position:0%
data types so even if the language
doesn't<00:02:08.009><c> provide</c><00:02:08.250><c> a</c><00:02:08.310><c> student</c><00:02:08.910><c> data</c><00:02:09.119><c> type</c><00:02:09.360><c> by</c>

00:02:09.559 --> 00:02:09.569 align:start position:0%
doesn't provide a student data type by
 

00:02:09.569 --> 00:02:11.930 align:start position:0%
doesn't provide a student data type by
default<00:02:10.110><c> a</c><00:02:10.349><c> developer</c><00:02:11.039><c> could</c><00:02:11.220><c> create</c><00:02:11.610><c> the</c>

00:02:11.930 --> 00:02:11.940 align:start position:0%
default a developer could create the
 

00:02:11.940 --> 00:02:13.330 align:start position:0%
default a developer could create the
student<00:02:12.270><c> data</c><00:02:12.450><c> type</c><00:02:12.690><c> and</c><00:02:12.900><c> then</c>

00:02:13.330 --> 00:02:13.340 align:start position:0%
student data type and then
 

00:02:13.340 --> 00:02:14.770 align:start position:0%
student data type and then
use<00:02:13.459><c> it</c><00:02:13.580><c> just</c><00:02:13.760><c> like</c><00:02:13.849><c> they</c><00:02:14.000><c> would</c><00:02:14.180><c> a</c><00:02:14.390><c> normal</c>

00:02:14.770 --> 00:02:14.780 align:start position:0%
use it just like they would a normal
 

00:02:14.780 --> 00:02:17.830 align:start position:0%
use it just like they would a normal
string<00:02:15.080><c> number</c><00:02:15.650><c> or</c><00:02:15.860><c> boolean</c><00:02:16.519><c> value</c><00:02:16.849><c> so</c><00:02:17.599><c> if</c><00:02:17.720><c> we</c>

00:02:17.830 --> 00:02:17.840 align:start position:0%
string number or boolean value so if we
 

00:02:17.840 --> 00:02:19.330 align:start position:0%
string number or boolean value so if we
use<00:02:17.989><c> an</c><00:02:18.140><c> object</c><00:02:18.319><c> or</c><00:02:18.590><c> in</c><00:02:18.769><c> a</c><00:02:18.830><c> programming</c>

00:02:19.330 --> 00:02:19.340 align:start position:0%
use an object or in a programming
 

00:02:19.340 --> 00:02:21.550 align:start position:0%
use an object or in a programming
language<00:02:19.370><c> to</c><00:02:19.670><c> write</c><00:02:20.030><c> our</c><00:02:20.209><c> school</c><00:02:20.599><c> program</c><00:02:21.080><c> we</c>

00:02:21.550 --> 00:02:21.560 align:start position:0%
language to write our school program we
 

00:02:21.560 --> 00:02:23.500 align:start position:0%
language to write our school program we
can<00:02:21.709><c> easily</c><00:02:22.250><c> keep</c><00:02:22.459><c> track</c><00:02:22.519><c> of</c><00:02:23.000><c> all</c><00:02:23.209><c> of</c><00:02:23.269><c> the</c>

00:02:23.500 --> 00:02:23.510 align:start position:0%
can easily keep track of all of the
 

00:02:23.510 --> 00:02:26.229 align:start position:0%
can easily keep track of all of the
students<00:02:23.930><c> by</c><00:02:24.110><c> creating</c><00:02:24.739><c> a</c><00:02:24.890><c> custom</c><00:02:25.550><c> student</c>

00:02:26.229 --> 00:02:26.239 align:start position:0%
students by creating a custom student
 

00:02:26.239 --> 00:02:28.660 align:start position:0%
students by creating a custom student
data<00:02:26.569><c> type</c><00:02:26.840><c> so</c><00:02:27.709><c> how</c><00:02:27.830><c> exactly</c><00:02:27.950><c> does</c><00:02:28.310><c> this</c><00:02:28.459><c> work</c>

00:02:28.660 --> 00:02:28.670 align:start position:0%
data type so how exactly does this work
 

00:02:28.670 --> 00:02:30.820 align:start position:0%
data type so how exactly does this work
how<00:02:28.879><c> can</c><00:02:29.060><c> we</c><00:02:29.180><c> go</c><00:02:29.330><c> about</c><00:02:29.360><c> creating</c><00:02:30.290><c> our</c><00:02:30.410><c> student</c>

00:02:30.820 --> 00:02:30.830 align:start position:0%
how can we go about creating our student
 

00:02:30.830 --> 00:02:32.890 align:start position:0%
how can we go about creating our student
data<00:02:30.980><c> type</c><00:02:31.280><c> and</c><00:02:31.489><c> start</c><00:02:32.000><c> creating</c><00:02:32.239><c> students</c><00:02:32.750><c> in</c>

00:02:32.890 --> 00:02:32.900 align:start position:0%
data type and start creating students in
 

00:02:32.900 --> 00:02:35.020 align:start position:0%
data type and start creating students in
our<00:02:32.959><c> program</c><00:02:33.410><c> the</c><00:02:34.040><c> first</c><00:02:34.280><c> step</c><00:02:34.489><c> is</c><00:02:34.610><c> to</c><00:02:34.760><c> create</c>

00:02:35.020 --> 00:02:35.030 align:start position:0%
our program the first step is to create
 

00:02:35.030 --> 00:02:37.270 align:start position:0%
our program the first step is to create
a<00:02:35.060><c> student</c><00:02:35.510><c> class</c><00:02:35.930><c> in</c><00:02:36.290><c> object-oriented</c>

00:02:37.270 --> 00:02:37.280 align:start position:0%
a student class in object-oriented
 

00:02:37.280 --> 00:02:40.089 align:start position:0%
a student class in object-oriented
programming<00:02:37.700><c> a</c><00:02:37.910><c> class</c><00:02:38.299><c> is</c><00:02:38.690><c> a</c><00:02:39.099><c> specification</c>

00:02:40.089 --> 00:02:40.099 align:start position:0%
programming a class is a specification
 

00:02:40.099 --> 00:02:42.369 align:start position:0%
programming a class is a specification
of<00:02:40.250><c> the</c><00:02:41.030><c> new</c><00:02:41.209><c> data</c><00:02:41.480><c> type</c><00:02:41.720><c> it's</c><00:02:41.900><c> essentially</c><00:02:42.200><c> a</c>

00:02:42.369 --> 00:02:42.379 align:start position:0%
of the new data type it's essentially a
 

00:02:42.379 --> 00:02:44.380 align:start position:0%
of the new data type it's essentially a
blueprint<00:02:43.040><c> that</c><00:02:43.459><c> tells</c><00:02:43.760><c> the</c><00:02:43.940><c> programming</c>

00:02:44.380 --> 00:02:44.390 align:start position:0%
blueprint that tells the programming
 

00:02:44.390 --> 00:02:45.880 align:start position:0%
blueprint that tells the programming
language<00:02:44.660><c> what</c><00:02:44.900><c> the</c><00:02:44.930><c> new</c><00:02:45.200><c> data</c><00:02:45.440><c> type</c><00:02:45.650><c> looks</c>

00:02:45.880 --> 00:02:45.890 align:start position:0%
language what the new data type looks
 

00:02:45.890 --> 00:02:48.370 align:start position:0%
language what the new data type looks
like<00:02:46.099><c> and</c><00:02:46.310><c> what</c><00:02:46.970><c> it's</c><00:02:47.120><c> made</c><00:02:47.269><c> up</c><00:02:47.450><c> of</c><00:02:47.569><c> in</c><00:02:47.810><c> our</c>

00:02:48.370 --> 00:02:48.380 align:start position:0%
like and what it's made up of in our
 

00:02:48.380 --> 00:02:49.809 align:start position:0%
like and what it's made up of in our
student<00:02:48.739><c> class</c><00:02:48.890><c> we</c><00:02:49.160><c> can</c><00:02:49.280><c> define</c><00:02:49.640><c> the</c>

00:02:49.809 --> 00:02:49.819 align:start position:0%
student class we can define the
 

00:02:49.819 --> 00:02:51.580 align:start position:0%
student class we can define the
attributes<00:02:49.940><c> and</c><00:02:50.480><c> the</c><00:02:50.660><c> functionality</c><00:02:51.170><c> that</c>

00:02:51.580 --> 00:02:51.590 align:start position:0%
attributes and the functionality that
 

00:02:51.590 --> 00:02:53.979 align:start position:0%
attributes and the functionality that
make<00:02:51.739><c> up</c><00:02:51.950><c> a</c><00:02:52.220><c> student</c><00:02:52.700><c> by</c><00:02:53.090><c> creating</c><00:02:53.599><c> a</c><00:02:53.750><c> student</c>

00:02:53.979 --> 00:02:53.989 align:start position:0%
make up a student by creating a student
 

00:02:53.989 --> 00:02:56.559 align:start position:0%
make up a student by creating a student
class<00:02:54.560><c> the</c><00:02:55.310><c> attributes</c><00:02:55.880><c> of</c><00:02:56.030><c> a</c><00:02:56.120><c> class</c><00:02:56.329><c> are</c>

00:02:56.559 --> 00:02:56.569 align:start position:0%
class the attributes of a class are
 

00:02:56.569 --> 00:02:59.110 align:start position:0%
class the attributes of a class are
individual<00:02:57.170><c> strings</c><00:02:57.560><c> numbers</c><00:02:58.069><c> or</c><00:02:58.579><c> boolean</c><00:02:58.879><c> z'</c>

00:02:59.110 --> 00:02:59.120 align:start position:0%
individual strings numbers or boolean z'
 

00:02:59.120 --> 00:03:00.789 align:start position:0%
individual strings numbers or boolean z'
which<00:02:59.420><c> define</c><00:02:59.840><c> the</c><00:02:59.870><c> attributes</c><00:03:00.170><c> of</c><00:03:00.680><c> the</c>

00:03:00.789 --> 00:03:00.799 align:start position:0%
which define the attributes of the
 

00:03:00.799 --> 00:03:03.069 align:start position:0%
which define the attributes of the
entity<00:03:01.220><c> we're</c><00:03:01.519><c> modeling</c><00:03:01.910><c> in</c><00:03:02.239><c> this</c><00:03:02.629><c> case</c><00:03:02.900><c> a</c>

00:03:03.069 --> 00:03:03.079 align:start position:0%
entity we're modeling in this case a
 

00:03:03.079 --> 00:03:05.020 align:start position:0%
entity we're modeling in this case a
student<00:03:03.470><c> might</c><00:03:03.709><c> have</c><00:03:03.739><c> a</c><00:03:04.400><c> name</c><00:03:04.730><c> attribute</c>

00:03:05.020 --> 00:03:05.030 align:start position:0%
student might have a name attribute
 

00:03:05.030 --> 00:03:07.900 align:start position:0%
student might have a name attribute
which<00:03:05.629><c> would</c><00:03:05.780><c> be</c><00:03:05.900><c> a</c><00:03:05.930><c> string</c><00:03:06.260><c> a</c><00:03:06.560><c> GPA</c><00:03:07.340><c> attribute</c>

00:03:07.900 --> 00:03:07.910 align:start position:0%
which would be a string a GPA attribute
 

00:03:07.910 --> 00:03:09.940 align:start position:0%
which would be a string a GPA attribute
which<00:03:08.030><c> would</c><00:03:08.150><c> be</c><00:03:08.239><c> a</c><00:03:08.269><c> number</c><00:03:08.450><c> a</c><00:03:08.840><c> year</c><00:03:09.410><c> attribute</c>

00:03:09.940 --> 00:03:09.950 align:start position:0%
which would be a number a year attribute
 

00:03:09.950 --> 00:03:12.100 align:start position:0%
which would be a number a year attribute
for<00:03:10.250><c> freshman</c><00:03:10.849><c> sophomore</c><00:03:11.269><c> junior</c><00:03:11.629><c> senior</c>

00:03:12.100 --> 00:03:12.110 align:start position:0%
for freshman sophomore junior senior
 

00:03:12.110 --> 00:03:13.930 align:start position:0%
for freshman sophomore junior senior
that<00:03:12.319><c> might</c><00:03:12.500><c> also</c><00:03:12.709><c> be</c><00:03:12.829><c> a</c><00:03:12.950><c> string</c><00:03:13.310><c> and</c><00:03:13.519><c> then</c>

00:03:13.930 --> 00:03:13.940 align:start position:0%
that might also be a string and then
 

00:03:13.940 --> 00:03:16.000 align:start position:0%
that might also be a string and then
maybe<00:03:14.120><c> it</c><00:03:14.299><c> has</c><00:03:14.569><c> scholarship</c><00:03:15.349><c> boolean</c><00:03:15.799><c> which</c>

00:03:16.000 --> 00:03:16.010 align:start position:0%
maybe it has scholarship boolean which
 

00:03:16.010 --> 00:03:17.199 align:start position:0%
maybe it has scholarship boolean which
would<00:03:16.190><c> determine</c><00:03:16.489><c> whether</c><00:03:16.790><c> or</c><00:03:16.879><c> not</c><00:03:17.000><c> the</c>

00:03:17.199 --> 00:03:17.209 align:start position:0%
would determine whether or not the
 

00:03:17.209 --> 00:03:19.390 align:start position:0%
would determine whether or not the
student<00:03:17.540><c> has</c><00:03:17.720><c> a</c><00:03:17.750><c> scholarship</c><00:03:18.079><c> so</c><00:03:18.950><c> you</c><00:03:19.040><c> can</c><00:03:19.190><c> see</c>

00:03:19.390 --> 00:03:19.400 align:start position:0%
student has a scholarship so you can see
 

00:03:19.400 --> 00:03:21.039 align:start position:0%
student has a scholarship so you can see
we<00:03:19.579><c> can</c><00:03:19.730><c> define</c><00:03:20.209><c> all</c><00:03:20.239><c> these</c><00:03:20.690><c> different</c>

00:03:21.039 --> 00:03:21.049 align:start position:0%
we can define all these different
 

00:03:21.049 --> 00:03:23.710 align:start position:0%
we can define all these different
attributes<00:03:21.260><c> of</c><00:03:21.920><c> a</c><00:03:22.459><c> student</c><00:03:22.940><c> which</c><00:03:23.480><c> themselves</c>

00:03:23.710 --> 00:03:23.720 align:start position:0%
attributes of a student which themselves
 

00:03:23.720 --> 00:03:26.199 align:start position:0%
attributes of a student which themselves
would<00:03:24.290><c> be</c><00:03:24.440><c> either</c><00:03:24.650><c> strings</c><00:03:25.459><c> numbers</c><00:03:25.940><c> or</c>

00:03:26.199 --> 00:03:26.209 align:start position:0%
would be either strings numbers or
 

00:03:26.209 --> 00:03:28.509 align:start position:0%
would be either strings numbers or
boolean<00:03:26.720><c> z'</c><00:03:26.780><c> in</c><00:03:27.109><c> addition</c><00:03:27.769><c> to</c><00:03:27.859><c> attributes</c><00:03:28.340><c> we</c>

00:03:28.509 --> 00:03:28.519 align:start position:0%
boolean z' in addition to attributes we
 

00:03:28.519 --> 00:03:31.000 align:start position:0%
boolean z' in addition to attributes we
can<00:03:28.670><c> also</c><00:03:28.880><c> define</c><00:03:29.380><c> functionality</c><00:03:30.380><c> around</c><00:03:30.829><c> the</c>

00:03:31.000 --> 00:03:31.010 align:start position:0%
can also define functionality around the
 

00:03:31.010 --> 00:03:33.069 align:start position:0%
can also define functionality around the
student<00:03:31.400><c> so</c><00:03:31.880><c> for</c><00:03:32.030><c> example</c><00:03:32.389><c> we</c><00:03:32.480><c> might</c><00:03:32.660><c> create</c><00:03:32.900><c> a</c>

00:03:33.069 --> 00:03:33.079 align:start position:0%
student so for example we might create a
 

00:03:33.079 --> 00:03:35.500 align:start position:0%
student so for example we might create a
has<00:03:33.500><c> honors</c><00:03:34.190><c> function</c><00:03:34.819><c> inside</c><00:03:35.180><c> of</c><00:03:35.359><c> the</c>

00:03:35.500 --> 00:03:35.510 align:start position:0%
has honors function inside of the
 

00:03:35.510 --> 00:03:37.990 align:start position:0%
has honors function inside of the
student<00:03:35.810><c> class</c><00:03:35.989><c> which</c><00:03:36.500><c> would</c><00:03:36.709><c> use</c><00:03:36.980><c> the</c><00:03:37.250><c> GPA</c><00:03:37.790><c> of</c>

00:03:37.990 --> 00:03:38.000 align:start position:0%
student class which would use the GPA of
 

00:03:38.000 --> 00:03:39.400 align:start position:0%
student class which would use the GPA of
the<00:03:38.120><c> student</c><00:03:38.450><c> to</c><00:03:38.569><c> determine</c><00:03:38.989><c> if</c><00:03:39.139><c> they</c><00:03:39.290><c> qualify</c>

00:03:39.400 --> 00:03:39.410 align:start position:0%
the student to determine if they qualify
 

00:03:39.410 --> 00:03:41.319 align:start position:0%
the student to determine if they qualify
for<00:03:39.889><c> honors</c><00:03:40.190><c> so</c><00:03:40.430><c> maybe</c><00:03:40.609><c> if</c><00:03:40.760><c> the</c><00:03:40.880><c> student</c><00:03:41.180><c> has</c><00:03:41.299><c> a</c>

00:03:41.319 --> 00:03:41.329 align:start position:0%
for honors so maybe if the student has a
 

00:03:41.329 --> 00:03:44.620 align:start position:0%
for honors so maybe if the student has a
GPA<00:03:41.780><c> of</c><00:03:42.139><c> greater</c><00:03:42.530><c> than</c><00:03:42.620><c> 3.5</c><00:03:43.609><c> then</c><00:03:44.329><c> we</c><00:03:44.480><c> would</c>

00:03:44.620 --> 00:03:44.630 align:start position:0%
GPA of greater than 3.5 then we would
 

00:03:44.630 --> 00:03:46.599 align:start position:0%
GPA of greater than 3.5 then we would
say<00:03:44.780><c> they</c><00:03:44.930><c> have</c><00:03:44.959><c> honors</c><00:03:45.590><c> a</c><00:03:45.769><c> week</c><00:03:46.220><c> you</c><00:03:46.310><c> create</c><00:03:46.579><c> a</c>

00:03:46.599 --> 00:03:46.609 align:start position:0%
say they have honors a week you create a
 

00:03:46.609 --> 00:03:48.400 align:start position:0%
say they have honors a week you create a
give<00:03:46.940><c> scholarship</c><00:03:47.660><c> function</c><00:03:48.049><c> which</c><00:03:48.230><c> would</c>

00:03:48.400 --> 00:03:48.410 align:start position:0%
give scholarship function which would
 

00:03:48.410 --> 00:03:50.940 align:start position:0%
give scholarship function which would
set<00:03:48.709><c> the</c><00:03:48.889><c> has</c><00:03:49.220><c> scholarship</c><00:03:50.120><c> boolean</c><00:03:50.599><c> to</c><00:03:50.900><c> true</c>

00:03:50.940 --> 00:03:50.950 align:start position:0%
set the has scholarship boolean to true
 

00:03:50.950 --> 00:03:53.319 align:start position:0%
set the has scholarship boolean to true
thus<00:03:51.950><c> giving</c><00:03:52.549><c> the</c><00:03:52.579><c> student</c><00:03:52.970><c> a</c><00:03:53.030><c> scholarship</c>

00:03:53.319 --> 00:03:53.329 align:start position:0%
thus giving the student a scholarship
 

00:03:53.329 --> 00:03:55.059 align:start position:0%
thus giving the student a scholarship
and<00:03:53.690><c> so</c><00:03:54.109><c> the</c><00:03:54.260><c> class</c><00:03:54.470><c> can</c><00:03:54.500><c> have</c><00:03:54.859><c> these</c>

00:03:55.059 --> 00:03:55.069 align:start position:0%
and so the class can have these
 

00:03:55.069 --> 00:03:57.670 align:start position:0%
and so the class can have these
attributes<00:03:55.400><c> and</c><00:03:56.030><c> these</c><00:03:56.359><c> functions</c><00:03:57.109><c> which</c>

00:03:57.670 --> 00:03:57.680 align:start position:0%
attributes and these functions which
 

00:03:57.680 --> 00:03:59.770 align:start position:0%
attributes and these functions which
will<00:03:57.919><c> essentially</c><00:03:58.340><c> make</c><00:03:58.700><c> up</c><00:03:58.910><c> the</c><00:03:59.120><c> data</c><00:03:59.510><c> type</c>

00:03:59.770 --> 00:03:59.780 align:start position:0%
will essentially make up the data type
 

00:03:59.780 --> 00:04:01.720 align:start position:0%
will essentially make up the data type
and<00:03:59.989><c> allow</c><00:04:00.319><c> us</c><00:04:00.500><c> to</c><00:04:00.530><c> define</c><00:04:00.829><c> what</c><00:04:01.310><c> a</c><00:04:01.370><c> student</c>

00:04:01.720 --> 00:04:01.730 align:start position:0%
and allow us to define what a student
 

00:04:01.730 --> 00:04:04.059 align:start position:0%
and allow us to define what a student
looks<00:04:01.940><c> like</c><00:04:02.150><c> in</c><00:04:02.389><c> our</c><00:04:02.540><c> program</c><00:04:02.750><c> when</c><00:04:03.650><c> we</c><00:04:03.680><c> create</c>

00:04:04.059 --> 00:04:04.069 align:start position:0%
looks like in our program when we create
 

00:04:04.069 --> 00:04:05.860 align:start position:0%
looks like in our program when we create
a<00:04:04.099><c> class</c><00:04:04.250><c> we</c><00:04:04.579><c> tell</c><00:04:04.910><c> the</c><00:04:05.090><c> language</c><00:04:05.480><c> what</c><00:04:05.720><c> this</c>

00:04:05.860 --> 00:04:05.870 align:start position:0%
a class we tell the language what this
 

00:04:05.870 --> 00:04:07.720 align:start position:0%
a class we tell the language what this
new<00:04:06.019><c> data</c><00:04:06.230><c> type</c><00:04:06.440><c> looks</c><00:04:06.680><c> like</c><00:04:06.859><c> and</c><00:04:07.099><c> what</c><00:04:07.639><c> it</c>

00:04:07.720 --> 00:04:07.730 align:start position:0%
new data type looks like and what it
 

00:04:07.730 --> 00:04:09.520 align:start position:0%
new data type looks like and what it
does<00:04:07.940><c> but</c><00:04:08.569><c> all</c><00:04:08.780><c> we're</c><00:04:08.930><c> doing</c><00:04:09.230><c> here</c><00:04:09.260><c> is</c>

00:04:09.520 --> 00:04:09.530 align:start position:0%
does but all we're doing here is
 

00:04:09.530 --> 00:04:11.080 align:start position:0%
does but all we're doing here is
describing<00:04:10.280><c> the</c><00:04:10.400><c> data</c><00:04:10.549><c> type</c><00:04:10.819><c> we're</c><00:04:11.000><c> not</c>

00:04:11.080 --> 00:04:11.090 align:start position:0%
describing the data type we're not
 

00:04:11.090 --> 00:04:13.599 align:start position:0%
describing the data type we're not
actually<00:04:11.510><c> creating</c><00:04:11.930><c> a</c><00:04:12.410><c> student</c><00:04:12.799><c> that</c><00:04:13.280><c> we</c><00:04:13.430><c> can</c>

00:04:13.599 --> 00:04:13.609 align:start position:0%
actually creating a student that we can
 

00:04:13.609 --> 00:04:15.520 align:start position:0%
actually creating a student that we can
work<00:04:13.790><c> with</c><00:04:13.819><c> to</c><00:04:14.690><c> create</c><00:04:14.959><c> a</c><00:04:14.989><c> student</c><00:04:15.290><c> in</c><00:04:15.440><c> our</c>

00:04:15.520 --> 00:04:15.530 align:start position:0%
work with to create a student in our
 

00:04:15.530 --> 00:04:18.039 align:start position:0%
work with to create a student in our
program<00:04:15.590><c> we'll</c><00:04:16.070><c> need</c><00:04:16.250><c> an</c><00:04:16.519><c> object</c><00:04:16.880><c> an</c><00:04:17.479><c> object</c>

00:04:18.039 --> 00:04:18.049 align:start position:0%
program we'll need an object an object
 

00:04:18.049 --> 00:04:20.860 align:start position:0%
program we'll need an object an object
is<00:04:18.620><c> an</c><00:04:18.799><c> instance</c><00:04:19.400><c> of</c><00:04:19.639><c> a</c><00:04:19.760><c> class</c><00:04:19.789><c> which</c><00:04:20.359><c> means</c><00:04:20.389><c> a</c>

00:04:20.860 --> 00:04:20.870 align:start position:0%
is an instance of a class which means a
 

00:04:20.870 --> 00:04:22.899 align:start position:0%
is an instance of a class which means a
student<00:04:21.289><c> object</c><00:04:21.409><c> would</c><00:04:21.829><c> be</c><00:04:21.979><c> an</c><00:04:22.130><c> instance</c><00:04:22.700><c> of</c>

00:04:22.899 --> 00:04:22.909 align:start position:0%
student object would be an instance of
 

00:04:22.909 --> 00:04:25.750 align:start position:0%
student object would be an instance of
our<00:04:23.630><c> student</c><00:04:23.990><c> class</c><00:04:24.169><c> so</c><00:04:24.950><c> a</c><00:04:24.979><c> student</c><00:04:25.340><c> object</c><00:04:25.430><c> is</c>

00:04:25.750 --> 00:04:25.760 align:start position:0%
our student class so a student object is
 

00:04:25.760 --> 00:04:27.170 align:start position:0%
our student class so a student object is
an<00:04:25.849><c> actual</c><00:04:26.270><c> student</c><00:04:26.719><c> with</c><00:04:26.990><c> an</c>

00:04:27.170 --> 00:04:27.180 align:start position:0%
an actual student with an
 

00:04:27.180 --> 00:04:30.080 align:start position:0%
an actual student with an
actual<00:04:27.630><c> name</c><00:04:27.870><c> GPA</c><00:04:28.530><c> year</c><00:04:29.160><c> and</c><00:04:29.430><c> scholarship</c>

00:04:30.080 --> 00:04:30.090 align:start position:0%
actual name GPA year and scholarship
 

00:04:30.090 --> 00:04:32.390 align:start position:0%
actual name GPA year and scholarship
status<00:04:30.479><c> so</c><00:04:31.139><c> in</c><00:04:31.259><c> our</c><00:04:31.289><c> program</c><00:04:31.530><c> we</c><00:04:31.860><c> might</c><00:04:32.039><c> create</c>

00:04:32.390 --> 00:04:32.400 align:start position:0%
status so in our program we might create
 

00:04:32.400 --> 00:04:34.879 align:start position:0%
status so in our program we might create
three<00:04:32.820><c> student</c><00:04:33.300><c> objects</c><00:04:33.780><c> with</c><00:04:33.990><c> names</c><00:04:34.350><c> Jack</c>

00:04:34.879 --> 00:04:34.889 align:start position:0%
three student objects with names Jack
 

00:04:34.889 --> 00:04:36.830 align:start position:0%
three student objects with names Jack
Kate<00:04:35.190><c> and</c><00:04:35.370><c> Sawyer</c><00:04:35.520><c> and</c><00:04:35.910><c> each</c><00:04:36.389><c> of</c><00:04:36.539><c> them</c><00:04:36.660><c> would</c>

00:04:36.830 --> 00:04:36.840 align:start position:0%
Kate and Sawyer and each of them would
 

00:04:36.840 --> 00:04:39.920 align:start position:0%
Kate and Sawyer and each of them would
be<00:04:36.990><c> an</c><00:04:37.169><c> instance</c><00:04:37.800><c> of</c><00:04:38.009><c> our</c><00:04:38.850><c> student</c><00:04:39.270><c> class</c><00:04:39.389><c> now</c>

00:04:39.920 --> 00:04:39.930 align:start position:0%
be an instance of our student class now
 

00:04:39.930 --> 00:04:41.990 align:start position:0%
be an instance of our student class now
the<00:04:39.990><c> object</c><00:04:40.650><c> is</c><00:04:40.830><c> the</c><00:04:41.160><c> actual</c><00:04:41.610><c> thing</c><00:04:41.639><c> that</c>

00:04:41.990 --> 00:04:42.000 align:start position:0%
the object is the actual thing that
 

00:04:42.000 --> 00:04:43.490 align:start position:0%
the object is the actual thing that
we're<00:04:42.300><c> gonna</c><00:04:42.389><c> work</c><00:04:42.660><c> with</c><00:04:42.690><c> in</c><00:04:42.990><c> our</c><00:04:43.080><c> programs</c>

00:04:43.490 --> 00:04:43.500 align:start position:0%
we're gonna work with in our programs
 

00:04:43.500 --> 00:04:45.290 align:start position:0%
we're gonna work with in our programs
you<00:04:43.620><c> could</c><00:04:43.770><c> pass</c><00:04:43.979><c> it</c><00:04:44.160><c> around</c><00:04:44.250><c> you</c><00:04:44.940><c> can</c><00:04:45.090><c> store</c>

00:04:45.290 --> 00:04:45.300 align:start position:0%
you could pass it around you can store
 

00:04:45.300 --> 00:04:47.150 align:start position:0%
you could pass it around you can store
it<00:04:45.419><c> inside</c><00:04:45.690><c> of</c><00:04:45.720><c> a</c><00:04:45.870><c> variable</c><00:04:46.320><c> you</c><00:04:46.530><c> could</c><00:04:46.650><c> access</c>

00:04:47.150 --> 00:04:47.160 align:start position:0%
it inside of a variable you could access
 

00:04:47.160 --> 00:04:48.920 align:start position:0%
it inside of a variable you could access
each<00:04:47.370><c> one</c><00:04:47.550><c> of</c><00:04:47.639><c> those</c><00:04:47.729><c> attributes</c><00:04:47.940><c> or</c><00:04:48.419><c> call</c><00:04:48.690><c> any</c>

00:04:48.920 --> 00:04:48.930 align:start position:0%
each one of those attributes or call any
 

00:04:48.930 --> 00:04:50.779 align:start position:0%
each one of those attributes or call any
of<00:04:49.080><c> those</c><00:04:49.199><c> functions</c><00:04:49.470><c> the</c><00:04:50.100><c> object</c><00:04:50.550><c> is</c><00:04:50.669><c> the</c>

00:04:50.779 --> 00:04:50.789 align:start position:0%
of those functions the object is the
 

00:04:50.789 --> 00:04:53.749 align:start position:0%
of those functions the object is the
implementation<00:04:51.539><c> of</c><00:04:51.930><c> the</c><00:04:52.229><c> class</c><00:04:52.530><c> the</c><00:04:53.250><c> class</c><00:04:53.520><c> is</c>

00:04:53.749 --> 00:04:53.759 align:start position:0%
implementation of the class the class is
 

00:04:53.759 --> 00:04:55.400 align:start position:0%
implementation of the class the class is
just<00:04:53.789><c> simply</c><00:04:54.330><c> the</c><00:04:54.509><c> blueprint</c><00:04:54.960><c> it</c><00:04:55.080><c> defines</c>

00:04:55.400 --> 00:04:55.410 align:start position:0%
just simply the blueprint it defines
 

00:04:55.410 --> 00:04:57.740 align:start position:0%
just simply the blueprint it defines
what<00:04:55.770><c> the</c><00:04:55.800><c> new</c><00:04:56.130><c> data</c><00:04:56.340><c> type</c><00:04:56.580><c> looks</c><00:04:56.880><c> like</c><00:04:57.060><c> now</c>

00:04:57.740 --> 00:04:57.750 align:start position:0%
what the new data type looks like now
 

00:04:57.750 --> 00:04:59.540 align:start position:0%
what the new data type looks like now
the<00:04:57.780><c> cool</c><00:04:58.080><c> thing</c><00:04:58.229><c> about</c><00:04:58.320><c> classes</c><00:04:58.979><c> and</c><00:04:59.009><c> objects</c>

00:04:59.540 --> 00:04:59.550 align:start position:0%
the cool thing about classes and objects
 

00:04:59.550 --> 00:05:01.370 align:start position:0%
the cool thing about classes and objects
is<00:04:59.699><c> that</c><00:04:59.729><c> once</c><00:05:00.000><c> we</c><00:05:00.180><c> define</c><00:05:00.660><c> what</c><00:05:01.050><c> the</c><00:05:01.199><c> data</c>

00:05:01.370 --> 00:05:01.380 align:start position:0%
is that once we define what the data
 

00:05:01.380 --> 00:05:03.290 align:start position:0%
is that once we define what the data
type<00:05:01.590><c> looks</c><00:05:01.860><c> like</c><00:05:02.009><c> in</c><00:05:02.160><c> the</c><00:05:02.250><c> class</c><00:05:02.490><c> we</c><00:05:03.150><c> can</c>

00:05:03.290 --> 00:05:03.300 align:start position:0%
type looks like in the class we can
 

00:05:03.300 --> 00:05:05.749 align:start position:0%
type looks like in the class we can
create<00:05:03.570><c> as</c><00:05:03.660><c> many</c><00:05:03.690><c> objects</c><00:05:04.650><c> or</c><00:05:04.860><c> instances</c><00:05:05.610><c> of</c>

00:05:05.749 --> 00:05:05.759 align:start position:0%
create as many objects or instances of
 

00:05:05.759 --> 00:05:08.360 align:start position:0%
create as many objects or instances of
that<00:05:05.849><c> class</c><00:05:05.910><c> as</c><00:05:06.419><c> we</c><00:05:06.900><c> want</c><00:05:07.139><c> so</c><00:05:07.680><c> our</c><00:05:07.830><c> program</c><00:05:08.220><c> can</c>

00:05:08.360 --> 00:05:08.370 align:start position:0%
that class as we want so our program can
 

00:05:08.370 --> 00:05:10.040 align:start position:0%
that class as we want so our program can
keep<00:05:08.550><c> track</c><00:05:08.729><c> of</c><00:05:08.789><c> thousands</c><00:05:09.539><c> of</c><00:05:09.660><c> student</c>

00:05:10.040 --> 00:05:10.050 align:start position:0%
keep track of thousands of student
 

00:05:10.050 --> 00:05:12.920 align:start position:0%
keep track of thousands of student
objects<00:05:10.500><c> all</c><00:05:10.680><c> with</c><00:05:11.009><c> their</c><00:05:11.160><c> own</c><00:05:11.310><c> name</c><00:05:11.610><c> GPA</c><00:05:12.449><c> year</c>

00:05:12.920 --> 00:05:12.930 align:start position:0%
objects all with their own name GPA year
 

00:05:12.930 --> 00:05:15.589 align:start position:0%
objects all with their own name GPA year
etc<00:05:13.280><c> now</c><00:05:14.280><c> our</c><00:05:14.430><c> code</c><00:05:14.610><c> could</c><00:05:14.849><c> also</c><00:05:15.060><c> use</c><00:05:15.419><c> the</c>

00:05:15.589 --> 00:05:15.599 align:start position:0%
etc now our code could also use the
 

00:05:15.599 --> 00:05:17.210 align:start position:0%
etc now our code could also use the
functions<00:05:16.020><c> exposed</c><00:05:16.440><c> by</c><00:05:16.710><c> each</c><00:05:16.889><c> of</c><00:05:17.070><c> these</c>

00:05:17.210 --> 00:05:17.220 align:start position:0%
functions exposed by each of these
 

00:05:17.220 --> 00:05:19.249 align:start position:0%
functions exposed by each of these
student<00:05:17.550><c> objects</c><00:05:18.000><c> to</c><00:05:18.210><c> for</c><00:05:18.599><c> example</c><00:05:18.660><c> give</c><00:05:19.110><c> them</c>

00:05:19.249 --> 00:05:19.259 align:start position:0%
student objects to for example give them
 

00:05:19.259 --> 00:05:21.110 align:start position:0%
student objects to for example give them
scholarships<00:05:19.530><c> or</c><00:05:20.280><c> figure</c><00:05:20.639><c> out</c><00:05:20.669><c> if</c><00:05:20.910><c> they</c><00:05:21.000><c> have</c>

00:05:21.110 --> 00:05:21.120 align:start position:0%
scholarships or figure out if they have
 

00:05:21.120 --> 00:05:23.300 align:start position:0%
scholarships or figure out if they have
honors<00:05:21.539><c> so</c><00:05:22.020><c> if</c><00:05:22.199><c> some</c><00:05:22.380><c> other</c><00:05:22.590><c> piece</c><00:05:22.860><c> of</c><00:05:23.039><c> code</c>

00:05:23.300 --> 00:05:23.310 align:start position:0%
honors so if some other piece of code
 

00:05:23.310 --> 00:05:24.800 align:start position:0%
honors so if some other piece of code
was<00:05:23.610><c> responsible</c><00:05:24.150><c> for</c><00:05:24.300><c> granting</c>

00:05:24.800 --> 00:05:24.810 align:start position:0%
was responsible for granting
 

00:05:24.810 --> 00:05:26.810 align:start position:0%
was responsible for granting
scholarships<00:05:24.960><c> to</c><00:05:25.560><c> students</c><00:05:25.889><c> it</c><00:05:26.070><c> could</c><00:05:26.520><c> use</c>

00:05:26.810 --> 00:05:26.820 align:start position:0%
scholarships to students it could use
 

00:05:26.820 --> 00:05:28.730 align:start position:0%
scholarships to students it could use
the<00:05:27.030><c> give</c><00:05:27.389><c> scholarship</c><00:05:28.050><c> function</c><00:05:28.470><c> for</c><00:05:28.710><c> a</c>

00:05:28.730 --> 00:05:28.740 align:start position:0%
the give scholarship function for a
 

00:05:28.740 --> 00:05:30.890 align:start position:0%
the give scholarship function for a
particular<00:05:29.039><c> student</c><00:05:29.610><c> in</c><00:05:29.729><c> order</c><00:05:30.389><c> to</c><00:05:30.570><c> do</c><00:05:30.720><c> that</c>

00:05:30.890 --> 00:05:30.900 align:start position:0%
particular student in order to do that
 

00:05:30.900 --> 00:05:33.230 align:start position:0%
particular student in order to do that
so<00:05:31.680><c> object-oriented</c><00:05:32.370><c> programming</c><00:05:32.849><c> is</c><00:05:33.000><c> really</c>

00:05:33.230 --> 00:05:33.240 align:start position:0%
so object-oriented programming is really
 

00:05:33.240 --> 00:05:35.870 align:start position:0%
so object-oriented programming is really
great<00:05:33.570><c> because</c><00:05:33.870><c> it</c><00:05:33.990><c> allows</c><00:05:34.020><c> us</c><00:05:34.320><c> to</c><00:05:34.530><c> model</c><00:05:35.220><c> real</c>

00:05:35.870 --> 00:05:35.880 align:start position:0%
great because it allows us to model real
 

00:05:35.880 --> 00:05:37.879 align:start position:0%
great because it allows us to model real
world<00:05:36.150><c> entities</c><00:05:36.419><c> like</c><00:05:37.020><c> students</c><00:05:37.620><c> in</c><00:05:37.800><c> our</c>

00:05:37.879 --> 00:05:37.889 align:start position:0%
world entities like students in our
 

00:05:37.889 --> 00:05:40.040 align:start position:0%
world entities like students in our
programs<00:05:38.400><c> so</c><00:05:38.610><c> we</c><00:05:39.060><c> can</c><00:05:39.240><c> create</c><00:05:39.479><c> a</c><00:05:39.599><c> student</c>

00:05:40.040 --> 00:05:40.050 align:start position:0%
programs so we can create a student
 

00:05:40.050 --> 00:05:41.839 align:start position:0%
programs so we can create a student
class<00:05:40.260><c> and</c><00:05:40.650><c> then</c><00:05:40.740><c> create</c><00:05:41.070><c> instances</c><00:05:41.610><c> of</c><00:05:41.729><c> that</c>

00:05:41.839 --> 00:05:41.849 align:start position:0%
class and then create instances of that
 

00:05:41.849 --> 00:05:44.360 align:start position:0%
class and then create instances of that
student<00:05:42.210><c> class</c><00:05:42.419><c> student</c><00:05:42.990><c> objects</c><00:05:43.440><c> and</c><00:05:43.650><c> use</c>

00:05:44.360 --> 00:05:44.370 align:start position:0%
student class student objects and use
 

00:05:44.370 --> 00:05:45.770 align:start position:0%
student class student objects and use
them<00:05:44.580><c> now</c><00:05:45.060><c> you</c><00:05:45.180><c> could</c><00:05:45.330><c> do</c><00:05:45.419><c> the</c><00:05:45.539><c> same</c><00:05:45.720><c> thing</c>

00:05:45.770 --> 00:05:45.780 align:start position:0%
them now you could do the same thing
 

00:05:45.780 --> 00:05:47.899 align:start position:0%
them now you could do the same thing
with<00:05:46.169><c> other</c><00:05:46.440><c> entities</c><00:05:47.070><c> in</c><00:05:47.099><c> the</c><00:05:47.340><c> real</c><00:05:47.520><c> world</c><00:05:47.760><c> it</c>

00:05:47.899 --> 00:05:47.909 align:start position:0%
with other entities in the real world it
 

00:05:47.909 --> 00:05:49.219 align:start position:0%
with other entities in the real world it
doesn't<00:05:48.210><c> just</c><00:05:48.360><c> have</c><00:05:48.449><c> to</c><00:05:48.510><c> be</c><00:05:48.599><c> students</c><00:05:49.110><c> you</c>

00:05:49.219 --> 00:05:49.229 align:start position:0%
doesn't just have to be students you
 

00:05:49.229 --> 00:05:51.379 align:start position:0%
doesn't just have to be students you
could<00:05:49.409><c> model</c><00:05:49.800><c> a</c><00:05:50.070><c> light</c><00:05:50.520><c> bulb</c><00:05:50.699><c> you</c><00:05:50.940><c> could</c><00:05:51.120><c> model</c>

00:05:51.379 --> 00:05:51.389 align:start position:0%
could model a light bulb you could model
 

00:05:51.389 --> 00:05:54.050 align:start position:0%
could model a light bulb you could model
a<00:05:51.479><c> microphone</c><00:05:51.930><c> you</c><00:05:52.199><c> can</c><00:05:52.500><c> model</c><00:05:52.949><c> an</c><00:05:53.280><c> animal</c><00:05:53.760><c> or</c>

00:05:54.050 --> 00:05:54.060 align:start position:0%
a microphone you can model an animal or
 

00:05:54.060 --> 00:05:55.939 align:start position:0%
a microphone you can model an animal or
a<00:05:54.090><c> day</c><00:05:54.449><c> of</c><00:05:54.570><c> the</c><00:05:54.720><c> week</c><00:05:54.900><c> you</c><00:05:55.289><c> can</c><00:05:55.320><c> model</c><00:05:55.710><c> anything</c>

00:05:55.939 --> 00:05:55.949 align:start position:0%
a day of the week you can model anything
 

00:05:55.949 --> 00:05:57.980 align:start position:0%
a day of the week you can model anything
that<00:05:56.250><c> you</c><00:05:56.370><c> can</c><00:05:56.550><c> think</c><00:05:56.580><c> of</c><00:05:57.000><c> an</c><00:05:57.270><c> object-oriented</c>

00:05:57.980 --> 00:05:57.990 align:start position:0%
that you can think of an object-oriented
 

00:05:57.990 --> 00:05:59.659 align:start position:0%
that you can think of an object-oriented
programming<00:05:58.409><c> is</c><00:05:58.620><c> great</c><00:05:58.949><c> because</c><00:05:59.280><c> it</c><00:05:59.430><c> allows</c>

00:05:59.659 --> 00:05:59.669 align:start position:0%
programming is great because it allows
 

00:05:59.669 --> 00:06:01.879 align:start position:0%
programming is great because it allows
you<00:05:59.849><c> to</c><00:05:59.970><c> be</c><00:06:00.120><c> flexible</c><00:06:00.780><c> enough</c><00:06:00.930><c> to</c><00:06:01.080><c> model</c><00:06:01.409><c> just</c>

00:06:01.879 --> 00:06:01.889 align:start position:0%
you to be flexible enough to model just
 

00:06:01.889 --> 00:06:04.939 align:start position:0%
you to be flexible enough to model just
about<00:06:02.159><c> anything</c><00:06:02.520><c> in</c><00:06:03.000><c> the</c><00:06:03.479><c> real</c><00:06:03.720><c> world</c><00:06:04.169><c> so</c>

00:06:04.939 --> 00:06:04.949 align:start position:0%
about anything in the real world so
 

00:06:04.949 --> 00:06:05.629 align:start position:0%
about anything in the real world so
that's<00:06:05.099><c> a</c><00:06:05.159><c> little</c><00:06:05.310><c> bit</c><00:06:05.490><c> about</c>

00:06:05.629 --> 00:06:05.639 align:start position:0%
that's a little bit about
 

00:06:05.639 --> 00:06:07.159 align:start position:0%
that's a little bit about
object-oriented<00:06:06.270><c> programming</c><00:06:06.780><c> it's</c><00:06:07.050><c> an</c>

00:06:07.159 --> 00:06:07.169 align:start position:0%
object-oriented programming it's an
 

00:06:07.169 --> 00:06:10.010 align:start position:0%
object-oriented programming it's an
extremely<00:06:08.070><c> popular</c><00:06:08.310><c> way</c><00:06:09.090><c> to</c><00:06:09.150><c> write</c><00:06:09.539><c> programs</c>

00:06:10.010 --> 00:06:10.020 align:start position:0%
extremely popular way to write programs
 

00:06:10.020 --> 00:06:11.779 align:start position:0%
extremely popular way to write programs
and<00:06:10.289><c> most</c><00:06:10.680><c> of</c><00:06:10.919><c> the</c><00:06:11.099><c> modern</c><00:06:11.340><c> programming</c>

00:06:11.779 --> 00:06:11.789 align:start position:0%
and most of the modern programming
 

00:06:11.789 --> 00:06:14.270 align:start position:0%
and most of the modern programming
languages<00:06:12.270><c> support</c><00:06:12.840><c> it</c><00:06:12.960><c> thanks</c><00:06:13.889><c> for</c><00:06:13.919><c> watching</c>

00:06:14.270 --> 00:06:14.280 align:start position:0%
languages support it thanks for watching
 

00:06:14.280 --> 00:06:15.770 align:start position:0%
languages support it thanks for watching
I<00:06:14.430><c> hope</c><00:06:14.520><c> you</c><00:06:14.699><c> enjoyed</c><00:06:14.940><c> the</c><00:06:15.060><c> video</c><00:06:15.210><c> and</c><00:06:15.330><c> you</c>

00:06:15.770 --> 00:06:15.780 align:start position:0%
I hope you enjoyed the video and you
 

00:06:15.780 --> 00:06:17.330 align:start position:0%
I hope you enjoyed the video and you
learn<00:06:15.960><c> something</c><00:06:16.320><c> new</c><00:06:16.500><c> and</c><00:06:16.710><c> I'll</c><00:06:17.099><c> see</c><00:06:17.280><c> you</c>

00:06:17.330 --> 00:06:17.340 align:start position:0%
learn something new and I'll see you
 

00:06:17.340 --> 00:06:19.699 align:start position:0%
learn something new and I'll see you
next<00:06:17.400><c> time</c>

